digraph AST {
3 [shape=box, label="VarDecl name='i'"];
4 [shape=box, label="VarDecl name='num_spaces'"];
6 [shape=box, label="Location name='i'\nreg: r0\ncode: \nloadAI [BP-8] => r0\ntype: int"];
7 [shape=box, label="Literal value=1\nreg: r1\ncode: \nloadI 1 => r1\ntype: int"];
5 [shape=box, label="Assignment\ncode: \nloadI 1 => r1\nstoreAI r1 => [BP-8]"];
5 -> 6;
5 -> 7;
9 [shape=box, label="Location name='num_spaces'\nreg: r2\ncode: \nloadAI [BP-16] => r2\ntype: int"];
11 [shape=box, label="Location name='base'\nreg: r3\ncode: \nloadAI [BP+16] => r3\ntype: int"];
12 [shape=box, label="Literal value=2\nreg: r4\ncode: \nloadI 2 => r4\ntype: int"];
10 [shape=box, label="BinaryOp op='/'\nreg: r5\ncode: \nloadAI [BP+16] => r3\nloadI 2 => r4\ndiv r3, r4 => r5\ntype: int"];
10 -> 11;
10 -> 12;
8 [shape=box, label="Assignment\ncode: \nloadAI [BP+16] => r3\nloadI 2 => r4\ndiv r3, r4 => r5\nstoreAI r5 => [BP-16]"];
8 -> 9;
8 -> 10;
16 [shape=box, label="Location name='base'\nreg: r6\ncode: \nloadAI [BP+16] => r6\ntype: int"];
17 [shape=box, label="Literal value=2\nreg: r7\ncode: \nloadI 2 => r7\ntype: int"];
15 [shape=box, label="BinaryOp op='%'\nreg: r8\ncode: \nloadAI [BP+16] => r6\nloadI 2 => r7\ndiv r6, r7 => r8\nmult r7, r8 => r8\nsub r6, r8 => r8\ntype: int"];
15 -> 16;
15 -> 17;
18 [shape=box, label="Literal value=0\nreg: r9\ncode: \nloadI 0 => r9\ntype: int"];
14 [shape=box, label="BinaryOp op='=='\nreg: r10\ncode: \nloadAI [BP+16] => r6\nloadI 2 => r7\ndiv r6, r7 => r8\nmult r7, r8 => r8\nsub r6, r8 => r8\nloadI 0 => r9\ncmp_EQ r8, r9 => r10\ntype: bool"];
14 -> 15;
14 -> 18;
21 [shape=box, label="Location name='i'\nreg: r11\ncode: \nloadAI [BP-8] => r11\ntype: int"];
22 [shape=box, label="Literal value=2\nreg: r12\ncode: \nloadI 2 => r12\ntype: int"];
20 [shape=box, label="Assignment\ncode: \nloadI 2 => r12\nstoreAI r12 => [BP-8]"];
20 -> 21;
20 -> 22;
24 [shape=box, label="Location name='num_spaces'\nreg: r13\ncode: \nloadAI [BP-16] => r13\ntype: int"];
26 [shape=box, label="Location name='num_spaces'\nreg: r14\ncode: \nloadAI [BP-16] => r14\ntype: int"];
27 [shape=box, label="Literal value=1\nreg: r15\ncode: \nloadI 1 => r15\ntype: int"];
25 [shape=box, label="BinaryOp op='-'\nreg: r16\ncode: \nloadAI [BP-16] => r14\nloadI 1 => r15\nsub r14, r15 => r16\ntype: int"];
25 -> 26;
25 -> 27;
23 [shape=box, label="Assignment\ncode: \nloadAI [BP-16] => r14\nloadI 1 => r15\nsub r14, r15 => r16\nstoreAI r16 => [BP-16]"];
23 -> 24;
23 -> 25;
19 [shape=box, label="Block\ncode: \nloadI 2 => r12\nstoreAI r12 => [BP-8]\nloadAI [BP-16] => r14\nloadI 1 => r15\nsub r14, r15 => r16\nstoreAI r16 => [BP-16]\nsymbolTable: (empty)"];
19 -> 20;
19 -> 23;
13 [shape=box, label="Conditional\ncode: \nloadAI [BP+16] => r6\nloadI 2 => r7\ndiv r6, r7 => r8\nmult r7, r8 => r8\nsub r6, r8 => r8\nloadI 0 => r9\ncmp_EQ r8, r9 => r10\ncbr r10 => l1, l2\nl1:\nloadI 2 => r12\nstoreAI r12 => [BP-8]\nloadAI [BP-16] => r14\nloadI 1 => r15\nsub r14, r15 => r16\nstoreAI r16 => [BP-16]\nl2:"];
13 -> 14;
13 -> 19;
30 [shape=box, label="Location name='base'\nreg: r17\ncode: \nloadAI [BP+16] => r17\ntype: int"];
31 [shape=box, label="Literal value=2\nreg: r18\ncode: \nloadI 2 => r18\ntype: int"];
29 [shape=box, label="BinaryOp op='<='\nreg: r19\ncode: \nloadAI [BP+16] => r17\nloadI 2 => r18\ncmp_LE r17, r18 => r19\ntype: bool"];
29 -> 30;
29 -> 31;
35 [shape=box, label="Location name='base'\nreg: r20\ncode: \nloadAI [BP+16] => r20\ntype: int"];
36 [shape=box, label="Literal value=1\nreg: r21\ncode: \nloadI 1 => r21\ntype: int"];
34 [shape=box, label="BinaryOp op='=='\nreg: r22\ncode: \nloadAI [BP+16] => r20\nloadI 1 => r21\ncmp_EQ r20, r21 => r22\ntype: bool"];
34 -> 35;
34 -> 36;
39 [shape=box, label="Literal value='#'\nreg: r23\ncode: \nloadI 35 => r23\ntype: str"];
38 [shape=box, label="FuncCall name='print_str'\ncode: \nprint \"#\"\ntype: void"];
38 -> 39;
37 [shape=box, label="Block\ncode: \nprint \"#\"\nsymbolTable: (empty)"];
37 -> 38;
42 [shape=box, label="Literal value='##'\nreg: r25\ncode: \nloadI 8995 => r25\ntype: str"];
41 [shape=box, label="FuncCall name='print_str'\ncode: \nprint \"##\"\ntype: void"];
41 -> 42;
40 [shape=box, label="Block\ncode: \nprint \"##\"\nsymbolTable: (empty)"];
40 -> 41;
33 [shape=box, label="Conditional\ncode: \nloadAI [BP+16] => r20\nloadI 1 => r21\ncmp_EQ r20, r21 => r22\ncbr r22 => l5, l6\nl5:\nprint \"#\"\njump l7\nl6:\nprint \"##\"\nl7:"];
33 -> 34;
33 -> 37;
33 -> 40;
32 [shape=box, label="Block\ncode: \nloadAI [BP+16] => r20\nloadI 1 => r21\ncmp_EQ r20, r21 => r22\ncbr r22 => l5, l6\nl5:\nprint \"#\"\njump l7\nl6:\nprint \"##\"\nl7:\nsymbolTable: (empty)"];
32 -> 33;
46 [shape=box, label="Location name='i'\nreg: r27\ncode: \nloadAI [BP-8] => r27\ntype: int"];
47 [shape=box, label="Location name='base'\nreg: r28\ncode: \nloadAI [BP+16] => r28\ntype: int"];
45 [shape=box, label="BinaryOp op='<='\nreg: r29\ncode: \nloadAI [BP-8] => r27\nloadAI [BP+16] => r28\ncmp_LE r27, r28 => r29\ntype: bool"];
45 -> 46;
45 -> 47;
49 [shape=box, label="VarDecl name='n'"];
50 [shape=box, label="VarDecl name='spaces'"];
52 [shape=box, label="Location name='n'\nreg: r30\ncode: \nloadAI [BP-24] => r30\ntype: int"];
53 [shape=box, label="Literal value=0\nreg: r31\ncode: \nloadI 0 => r31\ntype: int"];
51 [shape=box, label="Assignment\ncode: \nloadI 0 => r31\nstoreAI r31 => [BP-24]"];
51 -> 52;
51 -> 53;
55 [shape=box, label="Location name='spaces'\nreg: r32\ncode: \nloadAI [BP-32] => r32\ntype: int"];
56 [shape=box, label="Literal value=0\nreg: r33\ncode: \nloadI 0 => r33\ntype: int"];
54 [shape=box, label="Assignment\ncode: \nloadI 0 => r33\nstoreAI r33 => [BP-32]"];
54 -> 55;
54 -> 56;
59 [shape=box, label="Location name='spaces'\nreg: r34\ncode: \nloadAI [BP-32] => r34\ntype: int"];
60 [shape=box, label="Location name='num_spaces'\nreg: r35\ncode: \nloadAI [BP-16] => r35\ntype: int"];
58 [shape=box, label="BinaryOp op='<'\nreg: r36\ncode: \nloadAI [BP-32] => r34\nloadAI [BP-16] => r35\ncmp_LT r34, r35 => r36\ntype: bool"];
58 -> 59;
58 -> 60;
63 [shape=box, label="Literal value=' '\nreg: r37\ncode: \nloadI 32 => r37\ntype: str"];
62 [shape=box, label="FuncCall name='print_str'\ncode: \nprint \" \"\ntype: void"];
62 -> 63;
65 [shape=box, label="Location name='spaces'\nreg: r39\ncode: \nloadAI [BP-32] => r39\ntype: int"];
67 [shape=box, label="Location name='spaces'\nreg: r40\ncode: \nloadAI [BP-32] => r40\ntype: int"];
68 [shape=box, label="Literal value=1\nreg: r41\ncode: \nloadI 1 => r41\ntype: int"];
66 [shape=box, label="BinaryOp op='+'\nreg: r42\ncode: \nloadAI [BP-32] => r40\nloadI 1 => r41\nadd r40, r41 => r42\ntype: int"];
66 -> 67;
66 -> 68;
64 [shape=box, label="Assignment\ncode: \nloadAI [BP-32] => r40\nloadI 1 => r41\nadd r40, r41 => r42\nstoreAI r42 => [BP-32]"];
64 -> 65;
64 -> 66;
61 [shape=box, label="Block\ncode: \nprint \" \"\nloadAI [BP-32] => r40\nloadI 1 => r41\nadd r40, r41 => r42\nstoreAI r42 => [BP-32]\nsymbolTable: (empty)"];
61 -> 62;
61 -> 64;
57 [shape=box, label="WhileLoop\ncode: \nl11:\nloadAI [BP-32] => r34\nloadAI [BP-16] => r35\ncmp_LT r34, r35 => r36\ncbr r36 => l12, l13\nl12:\nprint \" \"\nloadAI [BP-32] => r40\nloadI 1 => r41\nadd r40, r41 => r42\nstoreAI r42 => [BP-32]\njump l11\nl13:"];
57 -> 58;
57 -> 61;
71 [shape=box, label="Location name='n'\nreg: r43\ncode: \nloadAI [BP-24] => r43\ntype: int"];
72 [shape=box, label="Location name='i'\nreg: r44\ncode: \nloadAI [BP-8] => r44\ntype: int"];
70 [shape=box, label="BinaryOp op='<'\nreg: r45\ncode: \nloadAI [BP-24] => r43\nloadAI [BP-8] => r44\ncmp_LT r43, r44 => r45\ntype: bool"];
70 -> 71;
70 -> 72;
75 [shape=box, label="Literal value='#'\nreg: r46\ncode: \nloadI 35 => r46\ntype: str"];
74 [shape=box, label="FuncCall name='print_str'\ncode: \nprint \"#\"\ntype: void"];
74 -> 75;
77 [shape=box, label="Location name='n'\nreg: r48\ncode: \nloadAI [BP-24] => r48\ntype: int"];
79 [shape=box, label="Location name='n'\nreg: r49\ncode: \nloadAI [BP-24] => r49\ntype: int"];
80 [shape=box, label="Literal value=1\nreg: r50\ncode: \nloadI 1 => r50\ntype: int"];
78 [shape=box, label="BinaryOp op='+'\nreg: r51\ncode: \nloadAI [BP-24] => r49\nloadI 1 => r50\nadd r49, r50 => r51\ntype: int"];
78 -> 79;
78 -> 80;
76 [shape=box, label="Assignment\ncode: \nloadAI [BP-24] => r49\nloadI 1 => r50\nadd r49, r50 => r51\nstoreAI r51 => [BP-24]"];
76 -> 77;
76 -> 78;
73 [shape=box, label="Block\ncode: \nprint \"#\"\nloadAI [BP-24] => r49\nloadI 1 => r50\nadd r49, r50 => r51\nstoreAI r51 => [BP-24]\nsymbolTable: (empty)"];
73 -> 74;
73 -> 76;
69 [shape=box, label="WhileLoop\ncode: \nl14:\nloadAI [BP-24] => r43\nloadAI [BP-8] => r44\ncmp_LT r43, r44 => r45\ncbr r45 => l15, l16\nl15:\nprint \"#\"\nloadAI [BP-24] => r49\nloadI 1 => r50\nadd r49, r50 => r51\nstoreAI r51 => [BP-24]\njump l14\nl16:"];
69 -> 70;
69 -> 73;
83 [shape=box, label="Location name='spaces'\nreg: r52\ncode: \nloadAI [BP-32] => r52\ntype: int"];
84 [shape=box, label="Literal value=0\nreg: r53\ncode: \nloadI 0 => r53\ntype: int"];
82 [shape=box, label="BinaryOp op='>'\nreg: r54\ncode: \nloadAI [BP-32] => r52\nloadI 0 => r53\ncmp_GT r52, r53 => r54\ntype: bool"];
82 -> 83;
82 -> 84;
87 [shape=box, label="Literal value=' '\nreg: r55\ncode: \nloadI 32 => r55\ntype: str"];
86 [shape=box, label="FuncCall name='print_str'\ncode: \nprint \" \"\ntype: void"];
86 -> 87;
89 [shape=box, label="Location name='spaces'\nreg: r57\ncode: \nloadAI [BP-32] => r57\ntype: int"];
91 [shape=box, label="Location name='spaces'\nreg: r58\ncode: \nloadAI [BP-32] => r58\ntype: int"];
92 [shape=box, label="Literal value=1\nreg: r59\ncode: \nloadI 1 => r59\ntype: int"];
90 [shape=box, label="BinaryOp op='-'\nreg: r60\ncode: \nloadAI [BP-32] => r58\nloadI 1 => r59\nsub r58, r59 => r60\ntype: int"];
90 -> 91;
90 -> 92;
88 [shape=box, label="Assignment\ncode: \nloadAI [BP-32] => r58\nloadI 1 => r59\nsub r58, r59 => r60\nstoreAI r60 => [BP-32]"];
88 -> 89;
88 -> 90;
85 [shape=box, label="Block\ncode: \nprint \" \"\nloadAI [BP-32] => r58\nloadI 1 => r59\nsub r58, r59 => r60\nstoreAI r60 => [BP-32]\nsymbolTable: (empty)"];
85 -> 86;
85 -> 88;
81 [shape=box, label="WhileLoop\ncode: \nl17:\nloadAI [BP-32] => r52\nloadI 0 => r53\ncmp_GT r52, r53 => r54\ncbr r54 => l18, l19\nl18:\nprint \" \"\nloadAI [BP-32] => r58\nloadI 1 => r59\nsub r58, r59 => r60\nstoreAI r60 => [BP-32]\njump l17\nl19:"];
81 -> 82;
81 -> 85;
95 [shape=box, label="Location name='i'\nreg: r61\ncode: \nloadAI [BP-8] => r61\ntype: int"];
96 [shape=box, label="Location name='base'\nreg: r62\ncode: \nloadAI [BP+16] => r62\ntype: int"];
94 [shape=box, label="BinaryOp op='<'\nreg: r63\ncode: \nloadAI [BP-8] => r61\nloadAI [BP+16] => r62\ncmp_LT r61, r62 => r63\ntype: bool"];
94 -> 95;
94 -> 96;
99 [shape=box, label="Literal value='\\n'\nreg: r64\ncode: \nloadI 10 => r64\ntype: str"];
98 [shape=box, label="FuncCall name='print_str'\ncode: \nprint \"\\n\"\ntype: void"];
98 -> 99;
97 [shape=box, label="Block\ncode: \nprint \"\\n\"\nsymbolTable: (empty)"];
97 -> 98;
93 [shape=box, label="Conditional\ncode: \nloadAI [BP-8] => r61\nloadAI [BP+16] => r62\ncmp_LT r61, r62 => r63\ncbr r63 => l20, l21\nl20:\nprint \"\\n\"\nl21:"];
93 -> 94;
93 -> 97;
101 [shape=box, label="Location name='i'\nreg: r66\ncode: \nloadAI [BP-8] => r66\ntype: int"];
103 [shape=box, label="Location name='i'\nreg: r67\ncode: \nloadAI [BP-8] => r67\ntype: int"];
104 [shape=box, label="Literal value=2\nreg: r68\ncode: \nloadI 2 => r68\ntype: int"];
102 [shape=box, label="BinaryOp op='+'\nreg: r69\ncode: \nloadAI [BP-8] => r67\nloadI 2 => r68\nadd r67, r68 => r69\ntype: int"];
102 -> 103;
102 -> 104;
100 [shape=box, label="Assignment\ncode: \nloadAI [BP-8] => r67\nloadI 2 => r68\nadd r67, r68 => r69\nstoreAI r69 => [BP-8]"];
100 -> 101;
100 -> 102;
106 [shape=box, label="Location name='num_spaces'\nreg: r70\ncode: \nloadAI [BP-16] => r70\ntype: int"];
108 [shape=box, label="Location name='num_spaces'\nreg: r71\ncode: \nloadAI [BP-16] => r71\ntype: int"];
109 [shape=box, label="Literal value=1\nreg: r72\ncode: \nloadI 1 => r72\ntype: int"];
107 [shape=box, label="BinaryOp op='-'\nreg: r73\ncode: \nloadAI [BP-16] => r71\nloadI 1 => r72\nsub r71, r72 => r73\ntype: int"];
107 -> 108;
107 -> 109;
105 [shape=box, label="Assignment\ncode: \nloadAI [BP-16] => r71\nloadI 1 => r72\nsub r71, r72 => r73\nstoreAI r73 => [BP-16]"];
105 -> 106;
105 -> 107;
48 [shape=box, label="Block\ncode: \nloadI 0 => r31\nstoreAI r31 => [BP-24]\nloadI 0 => r33\nstoreAI r33 => [BP-32]\nl11:\nloadAI [BP-32] => r34\nloadAI [BP-16] => r35\ncmp_LT r34, r35 => r36\ncbr r36 => l12, l13\nl12:\nprint \" \"\nloadAI [BP-32] => r40\nloadI 1 => r41\nadd r40, r41 => r42\nstoreAI r42 => [BP-32]\njump l11\nl13:\nl14:\nloadAI [BP-24] => r43\nloadAI [BP-8] => r44\ncmp_LT r43, r44 => r45\ncbr r45 => l15, l16\nl15:\nprint \"#\"\nloadAI [BP-24] => r49\nloadI 1 => r50\nadd r49, r50 => r51\nstoreAI r51 => [BP-24]\njump l14\nl16:\nl17:\nloadAI [BP-32] => r52\nloadI 0 => r53\ncmp_GT r52, r53 => r54\ncbr r54 => l18, l19\nl18:\nprint \" \"\nloadAI [BP-32] => r58\nloadI 1 => r59\nsub r58, r59 => r60\nstoreAI r60 => [BP-32]\njump l17\nl19:\nloadAI [BP-8] => r61\nloadAI [BP+16] => r62\ncmp_LT r61, r62 => r63\ncbr r63 => l20, l21\nl20:\nprint \"\\n\"\nl21:\nloadAI [BP-8] => r67\nloadI 2 => r68\nadd r67, r68 => r69\nstoreAI r69 => [BP-8]\nloadAI [BP-16] => r71\nloadI 1 => r72\nsub r71, r72 => r73\nstoreAI r73 => [BP-16]\nsymbolTable: \n  n : int {stack offset=-24}\n  spaces : int {stack offset=-32}"];
48 -> 49;
48 -> 50;
48 -> 51;
48 -> 54;
48 -> 57;
48 -> 69;
48 -> 81;
48 -> 93;
48 -> 100;
48 -> 105;
44 [shape=box, label="WhileLoop\ncode: \nl8:\nloadAI [BP-8] => r27\nloadAI [BP+16] => r28\ncmp_LE r27, r28 => r29\ncbr r29 => l9, l10\nl9:\nloadI 0 => r31\nstoreAI r31 => [BP-24]\nloadI 0 => r33\nstoreAI r33 => [BP-32]\nl11:\nloadAI [BP-32] => r34\nloadAI [BP-16] => r35\ncmp_LT r34, r35 => r36\ncbr r36 => l12, l13\nl12:\nprint \" \"\nloadAI [BP-32] => r40\nloadI 1 => r41\nadd r40, r41 => r42\nstoreAI r42 => [BP-32]\njump l11\nl13:\nl14:\nloadAI [BP-24] => r43\nloadAI [BP-8] => r44\ncmp_LT r43, r44 => r45\ncbr r45 => l15, l16\nl15:\nprint \"#\"\nloadAI [BP-24] => r49\nloadI 1 => r50\nadd r49, r50 => r51\nstoreAI r51 => [BP-24]\njump l14\nl16:\nl17:\nloadAI [BP-32] => r52\nloadI 0 => r53\ncmp_GT r52, r53 => r54\ncbr r54 => l18, l19\nl18:\nprint \" \"\nloadAI [BP-32] => r58\nloadI 1 => r59\nsub r58, r59 => r60\nstoreAI r60 => [BP-32]\njump l17\nl19:\nloadAI [BP-8] => r61\nloadAI [BP+16] => r62\ncmp_LT r61, r62 => r63\ncbr r63 => l20, l21\nl20:\nprint \"\\n\"\nl21:\nloadAI [BP-8] => r67\nloadI 2 => r68\nadd r67, r68 => r69\nstoreAI r69 => [BP-8]\nloadAI [BP-16] => r71\nloadI 1 => r72\nsub r71, r72 => r73\nstoreAI r73 => [BP-16]\njump l8\nl10:"];
44 -> 45;
44 -> 48;
43 [shape=box, label="Block\ncode: \nl8:\nloadAI [BP-8] => r27\nloadAI [BP+16] => r28\ncmp_LE r27, r28 => r29\ncbr r29 => l9, l10\nl9:\nloadI 0 => r31\nstoreAI r31 => [BP-24]\nloadI 0 => r33\nstoreAI r33 => [BP-32]\nl11:\nloadAI [BP-32] => r34\nloadAI [BP-16] => r35\ncmp_LT r34, r35 => r36\ncbr r36 => l12, l13\nl12:\nprint \" \"\nloadAI [BP-32] => r40\nloadI 1 => r41\nadd r40, r41 => r42\nstoreAI r42 => [BP-32]\njump l11\nl13:\nl14:\nloadAI [BP-24] => r43\nloadAI [BP-8] => r44\ncmp_LT r43, r44 => r45\ncbr r45 => l15, l16\nl15:\nprint \"#\"\nloadAI [BP-24] => r49\nloadI 1 => r50\nadd r49, r50 => r51\nstoreAI r51 => [BP-24]\njump l14\nl16:\nl17:\nloadAI [BP-32] => r52\nloadI 0 => r53\ncmp_GT r52, r53 => r54\ncbr r54 => l18, l19\nl18:\nprint \" \"\nloadAI [BP-32] => r58\nloadI 1 => r59\nsub r58, r59 => r60\nstoreAI r60 => [BP-32]\njump l17\nl19:\nloadAI [BP-8] => r61\nloadAI [BP+16] => r62\ncmp_LT r61, r62 => r63\ncbr r63 => l20, l21\nl20:\nprint \"\\n\"\nl21:\nloadAI [BP-8] => r67\nloadI 2 => r68\nadd r67, r68 => r69\nstoreAI r69 => [BP-8]\nloadAI [BP-16] => r71\nloadI 1 => r72\nsub r71, r72 => r73\nstoreAI r73 => [BP-16]\njump l8\nl10:\nsymbolTable: (empty)"];
43 -> 44;
28 [shape=box, label="Conditional\ncode: \nloadAI [BP+16] => r17\nloadI 2 => r18\ncmp_LE r17, r18 => r19\ncbr r19 => l3, l4\nl3:\nloadAI [BP+16] => r20\nloadI 1 => r21\ncmp_EQ r20, r21 => r22\ncbr r22 => l5, l6\nl5:\nprint \"#\"\njump l7\nl6:\nprint \"##\"\nl7:\njump l22\nl4:\nl8:\nloadAI [BP-8] => r27\nloadAI [BP+16] => r28\ncmp_LE r27, r28 => r29\ncbr r29 => l9, l10\nl9:\nloadI 0 => r31\nstoreAI r31 => [BP-24]\nloadI 0 => r33\nstoreAI r33 => [BP-32]\nl11:\nloadAI [BP-32] => r34\nloadAI [BP-16] => r35\ncmp_LT r34, r35 => r36\ncbr r36 => l12, l13\nl12:\nprint \" \"\nloadAI [BP-32] => r40\nloadI 1 => r41\nadd r40, r41 => r42\nstoreAI r42 => [BP-32]\njump l11\nl13:\nl14:\nloadAI [BP-24] => r43\nloadAI [BP-8] => r44\ncmp_LT r43, r44 => r45\ncbr r45 => l15, l16\nl15:\nprint \"#\"\nloadAI [BP-24] => r49\nloadI 1 => r50\nadd r49, r50 => r51\nstoreAI r51 => [BP-24]\njump l14\nl16:\nl17:\nloadAI [BP-32] => r52\nloadI 0 => r53\ncmp_GT r52, r53 => r54\ncbr r54 => l18, l19\nl18:\nprint \" \"\nloadAI [BP-32] => r58\nloadI 1 => r59\nsub r58, r59 => r60\nstoreAI r60 => [BP-32]\njump l17\nl19:\nloadAI [BP-8] => r61\nloadAI [BP+16] => r62\ncmp_LT r61, r62 => r63\ncbr r63 => l20, l21\nl20:\nprint \"\\n\"\nl21:\nloadAI [BP-8] => r67\nloadI 2 => r68\nadd r67, r68 => r69\nstoreAI r69 => [BP-8]\nloadAI [BP-16] => r71\nloadI 1 => r72\nsub r71, r72 => r73\nstoreAI r73 => [BP-16]\njump l8\nl10:\nl22:"];
28 -> 29;
28 -> 32;
28 -> 43;
2 [shape=box, label="Block\ncode: \nloadI 1 => r1\nstoreAI r1 => [BP-8]\nloadAI [BP+16] => r3\nloadI 2 => r4\ndiv r3, r4 => r5\nstoreAI r5 => [BP-16]\nloadAI [BP+16] => r6\nloadI 2 => r7\ndiv r6, r7 => r8\nmult r7, r8 => r8\nsub r6, r8 => r8\nloadI 0 => r9\ncmp_EQ r8, r9 => r10\ncbr r10 => l1, l2\nl1:\nloadI 2 => r12\nstoreAI r12 => [BP-8]\nloadAI [BP-16] => r14\nloadI 1 => r15\nsub r14, r15 => r16\nstoreAI r16 => [BP-16]\nl2:\nloadAI [BP+16] => r17\nloadI 2 => r18\ncmp_LE r17, r18 => r19\ncbr r19 => l3, l4\nl3:\nloadAI [BP+16] => r20\nloadI 1 => r21\ncmp_EQ r20, r21 => r22\ncbr r22 => l5, l6\nl5:\nprint \"#\"\njump l7\nl6:\nprint \"##\"\nl7:\njump l22\nl4:\nl8:\nloadAI [BP-8] => r27\nloadAI [BP+16] => r28\ncmp_LE r27, r28 => r29\ncbr r29 => l9, l10\nl9:\nloadI 0 => r31\nstoreAI r31 => [BP-24]\nloadI 0 => r33\nstoreAI r33 => [BP-32]\nl11:\nloadAI [BP-32] => r34\nloadAI [BP-16] => r35\ncmp_LT r34, r35 => r36\ncbr r36 => l12, l13\nl12:\nprint \" \"\nloadAI [BP-32] => r40\nloadI 1 => r41\nadd r40, r41 => r42\nstoreAI r42 => [BP-32]\njump l11\nl13:\nl14:\nloadAI [BP-24] => r43\nloadAI [BP-8] => r44\ncmp_LT r43, r44 => r45\ncbr r45 => l15, l16\nl15:\nprint \"#\"\nloadAI [BP-24] => r49\nloadI 1 => r50\nadd r49, r50 => r51\nstoreAI r51 => [BP-24]\njump l14\nl16:\nl17:\nloadAI [BP-32] => r52\nloadI 0 => r53\ncmp_GT r52, r53 => r54\ncbr r54 => l18, l19\nl18:\nprint \" \"\nloadAI [BP-32] => r58\nloadI 1 => r59\nsub r58, r59 => r60\nstoreAI r60 => [BP-32]\njump l17\nl19:\nloadAI [BP-8] => r61\nloadAI [BP+16] => r62\ncmp_LT r61, r62 => r63\ncbr r63 => l20, l21\nl20:\nprint \"\\n\"\nl21:\nloadAI [BP-8] => r67\nloadI 2 => r68\nadd r67, r68 => r69\nstoreAI r69 => [BP-8]\nloadAI [BP-16] => r71\nloadI 1 => r72\nsub r71, r72 => r73\nstoreAI r73 => [BP-16]\njump l8\nl10:\nl22:\nsymbolTable: \n  i : int {stack offset=-8}\n  num_spaces : int {stack offset=-16}"];
2 -> 3;
2 -> 4;
2 -> 5;
2 -> 8;
2 -> 13;
2 -> 28;
1 [shape=box, label="FuncDecl name='draw_triangle'\ncode: \ndraw_triangle:\npush BP\ni2i SP => BP\naddI SP, -16 => SP\nloadI 1 => r1\nstoreAI r1 => [BP-8]\nloadAI [BP+16] => r3\nloadI 2 => r4\ndiv r3, r4 => r5\nstoreAI r5 => [BP-16]\nloadAI [BP+16] => r6\nloadI 2 => r7\ndiv r6, r7 => r8\nmult r7, r8 => r8\nsub r6, r8 => r8\nloadI 0 => r9\ncmp_EQ r8, r9 => r10\ncbr r10 => l1, l2\nl1:\nloadI 2 => r12\nstoreAI r12 => [BP-8]\nloadAI [BP-16] => r14\nloadI 1 => r15\nsub r14, r15 => r16\nstoreAI r16 => [BP-16]\nl2:\nloadAI [BP+16] => r17\nloadI 2 => r18\ncmp_LE r17, r18 => r19\ncbr r19 => l3, l4\nl3:\nloadAI [BP+16] => r20\nloadI 1 => r21\ncmp_EQ r20, r21 => r22\ncbr r22 => l5, l6\nl5:\nprint \"#\"\njump l7\nl6:\nprint \"##\"\nl7:\njump l22\nl4:\nl8:\nloadAI [BP-8] => r27\nloadAI [BP+16] => r28\ncmp_LE r27, r28 => r29\ncbr r29 => l9, l10\nl9:\nloadI 0 => r31\nstoreAI r31 => [BP-24]\nloadI 0 => r33\nstoreAI r33 => [BP-32]\nl11:\nloadAI [BP-32] => r34\nloadAI [BP-16] => r35\ncmp_LT r34, r35 => r36\ncbr r36 => l12, l13\nl12:\nprint \" \"\nloadAI [BP-32] => r40\nloadI 1 => r41\nadd r40, r41 => r42\nstoreAI r42 => [BP-32]\njump l11\nl13:\nl14:\nloadAI [BP-24] => r43\nloadAI [BP-8] => r44\ncmp_LT r43, r44 => r45\ncbr r45 => l15, l16\nl15:\nprint \"#\"\nloadAI [BP-24] => r49\nloadI 1 => r50\nadd r49, r50 => r51\nstoreAI r51 => [BP-24]\njump l14\nl16:\nl17:\nloadAI [BP-32] => r52\nloadI 0 => r53\ncmp_GT r52, r53 => r54\ncbr r54 => l18, l19\nl18:\nprint \" \"\nloadAI [BP-32] => r58\nloadI 1 => r59\nsub r58, r59 => r60\nstoreAI r60 => [BP-32]\njump l17\nl19:\nloadAI [BP-8] => r61\nloadAI [BP+16] => r62\ncmp_LT r61, r62 => r63\ncbr r63 => l20, l21\nl20:\nprint \"\\n\"\nl21:\nloadAI [BP-8] => r67\nloadI 2 => r68\nadd r67, r68 => r69\nstoreAI r69 => [BP-8]\nloadAI [BP-16] => r71\nloadI 1 => r72\nsub r71, r72 => r73\nstoreAI r73 => [BP-16]\njump l8\nl10:\nl22:\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 32\nsymbolTable: \n  base : int {stack offset=16}"];
1 -> 2;
113 [shape=box, label="Literal value='\\nTest draw_triangle() function.\\n'\nreg: r74\ncode: \nloadI 1936020490 => r74\ntype: str"];
112 [shape=box, label="FuncCall name='print_str'\ncode: \nprint \"\\nTest draw_triangle() function.\\n\"\ntype: void"];
112 -> 113;
115 [shape=box, label="Literal value=1\nreg: r76\ncode: \nloadI 1 => r76\ntype: int"];
114 [shape=box, label="FuncCall name='draw_triangle'\nreg: r78\ncode: \nloadI 1 => r76\npush r76\ncall draw_triangle\naddI SP, 8 => SP\ni2i RET => r78\ntype: void"];
114 -> 115;
117 [shape=box, label="Literal value='\\n'\nreg: r79\ncode: \nloadI 10 => r79\ntype: str"];
116 [shape=box, label="FuncCall name='print_str'\ncode: \nprint \"\\n\"\ntype: void"];
116 -> 117;
119 [shape=box, label="Literal value=2\nreg: r81\ncode: \nloadI 2 => r81\ntype: int"];
118 [shape=box, label="FuncCall name='draw_triangle'\nreg: r83\ncode: \nloadI 2 => r81\npush r81\ncall draw_triangle\naddI SP, 8 => SP\ni2i RET => r83\ntype: void"];
118 -> 119;
121 [shape=box, label="Literal value='\\n'\nreg: r84\ncode: \nloadI 10 => r84\ntype: str"];
120 [shape=box, label="FuncCall name='print_str'\ncode: \nprint \"\\n\"\ntype: void"];
120 -> 121;
123 [shape=box, label="Literal value=5\nreg: r86\ncode: \nloadI 5 => r86\ntype: int"];
122 [shape=box, label="FuncCall name='draw_triangle'\nreg: r88\ncode: \nloadI 5 => r86\npush r86\ncall draw_triangle\naddI SP, 8 => SP\ni2i RET => r88\ntype: void"];
122 -> 123;
125 [shape=box, label="Literal value='\\n'\nreg: r89\ncode: \nloadI 10 => r89\ntype: str"];
124 [shape=box, label="FuncCall name='print_str'\ncode: \nprint \"\\n\"\ntype: void"];
124 -> 125;
127 [shape=box, label="Literal value=8\nreg: r91\ncode: \nloadI 8 => r91\ntype: int"];
126 [shape=box, label="FuncCall name='draw_triangle'\nreg: r93\ncode: \nloadI 8 => r91\npush r91\ncall draw_triangle\naddI SP, 8 => SP\ni2i RET => r93\ntype: void"];
126 -> 127;
129 [shape=box, label="Literal value='\\n'\nreg: r94\ncode: \nloadI 10 => r94\ntype: str"];
128 [shape=box, label="FuncCall name='print_str'\ncode: \nprint \"\\n\"\ntype: void"];
128 -> 129;
132 [shape=box, label="Literal value=1\nreg: r96\ncode: \nloadI 1 => r96\ntype: int"];
131 [shape=box, label="UnaryOp op='-'\nreg: r97\ncode: \nloadI 1 => r96\nneg r96 => r97\ntype: int"];
131 -> 132;
130 [shape=box, label="Return\ncode: \nloadI 1 => r96\nneg r96 => r97\ni2i r97 => RET\njump l23"];
130 -> 131;
111 [shape=box, label="Block\ncode: \nprint \"\\nTest draw_triangle() function.\\n\"\nloadI 1 => r76\npush r76\ncall draw_triangle\naddI SP, 8 => SP\ni2i RET => r78\nprint \"\\n\"\nloadI 2 => r81\npush r81\ncall draw_triangle\naddI SP, 8 => SP\ni2i RET => r83\nprint \"\\n\"\nloadI 5 => r86\npush r86\ncall draw_triangle\naddI SP, 8 => SP\ni2i RET => r88\nprint \"\\n\"\nloadI 8 => r91\npush r91\ncall draw_triangle\naddI SP, 8 => SP\ni2i RET => r93\nprint \"\\n\"\nloadI 1 => r96\nneg r96 => r97\ni2i r97 => RET\njump l23\nsymbolTable: (empty)"];
111 -> 112;
111 -> 114;
111 -> 116;
111 -> 118;
111 -> 120;
111 -> 122;
111 -> 124;
111 -> 126;
111 -> 128;
111 -> 130;
110 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, 0 => SP\nprint \"\\nTest draw_triangle() function.\\n\"\nloadI 1 => r76\npush r76\ncall draw_triangle\naddI SP, 8 => SP\ni2i RET => r78\nprint \"\\n\"\nloadI 2 => r81\npush r81\ncall draw_triangle\naddI SP, 8 => SP\ni2i RET => r83\nprint \"\\n\"\nloadI 5 => r86\npush r86\ncall draw_triangle\naddI SP, 8 => SP\ni2i RET => r88\nprint \"\\n\"\nloadI 8 => r91\npush r91\ncall draw_triangle\naddI SP, 8 => SP\ni2i RET => r93\nprint \"\\n\"\nloadI 1 => r96\nneg r96 => r97\ni2i r97 => RET\njump l23\nl23:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 0\nsymbolTable: (empty)"];
110 -> 111;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  draw_triangle : (int) -> void\n  main : () -> int"];
0 -> 1;
0 -> 110;
}
