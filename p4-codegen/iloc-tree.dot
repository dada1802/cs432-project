digraph AST {
3 [shape=box, label="VarDecl name='a'"];
4 [shape=box, label="VarDecl name='b'"];
5 [shape=box, label="VarDecl name='c'"];
7 [shape=box, label="Location name='a'\nreg: r0\ncode: \nloadAI [BP-8] => r0\ntype: int"];
8 [shape=box, label="Literal value=2\nreg: r1\ncode: \nloadI 2 => r1\ntype: int"];
6 [shape=box, label="Assignment\ncode: \nloadI 2 => r1\nstoreAI r1 => [BP-8]"];
6 -> 7;
6 -> 8;
10 [shape=box, label="Location name='b'\nreg: r2\ncode: \nloadAI [BP-16] => r2\ntype: int"];
11 [shape=box, label="Literal value=3\nreg: r3\ncode: \nloadI 3 => r3\ntype: int"];
9 [shape=box, label="Assignment\ncode: \nloadI 3 => r3\nstoreAI r3 => [BP-16]"];
9 -> 10;
9 -> 11;
13 [shape=box, label="Location name='c'\nreg: r4\ncode: \nloadAI [BP-24] => r4\ntype: int"];
14 [shape=box, label="Literal value=1\nreg: r5\ncode: \nloadI 1 => r5\ntype: int"];
12 [shape=box, label="Assignment\ncode: \nloadI 1 => r5\nstoreAI r5 => [BP-24]"];
12 -> 13;
12 -> 14;
17 [shape=box, label="Location name='a'\nreg: r6\ncode: \nloadAI [BP-8] => r6\ntype: int"];
18 [shape=box, label="Literal value=3\nreg: r7\ncode: \nloadI 3 => r7\ntype: int"];
16 [shape=box, label="BinaryOp op='<'\nreg: r8\ncode: \nloadAI [BP-8] => r6\nloadI 3 => r7\ncmp_LT r6, r7 => r8\ntype: bool"];
16 -> 17;
16 -> 18;
22 [shape=box, label="Location name='b'\nreg: r9\ncode: \nloadAI [BP-16] => r9\ntype: int"];
23 [shape=box, label="Literal value=5\nreg: r10\ncode: \nloadI 5 => r10\ntype: int"];
21 [shape=box, label="BinaryOp op='<'\nreg: r11\ncode: \nloadAI [BP-16] => r9\nloadI 5 => r10\ncmp_LT r9, r10 => r11\ntype: bool"];
21 -> 22;
21 -> 23;
26 [shape=box, label="Location name='c'\nreg: r12\ncode: \nloadAI [BP-24] => r12\ntype: int"];
27 [shape=box, label="Literal value=3\nreg: r13\ncode: \nloadI 3 => r13\ntype: int"];
25 [shape=box, label="Assignment\ncode: \nloadI 3 => r13\nstoreAI r13 => [BP-24]"];
25 -> 26;
25 -> 27;
24 [shape=box, label="Block\ncode: \nloadI 3 => r13\nstoreAI r13 => [BP-24]\nsymbolTable: (empty)"];
24 -> 25;
30 [shape=box, label="Location name='c'\nreg: r14\ncode: \nloadAI [BP-24] => r14\ntype: int"];
31 [shape=box, label="Literal value=2\nreg: r15\ncode: \nloadI 2 => r15\ntype: int"];
29 [shape=box, label="Assignment\ncode: \nloadI 2 => r15\nstoreAI r15 => [BP-24]"];
29 -> 30;
29 -> 31;
28 [shape=box, label="Block\ncode: \nloadI 2 => r15\nstoreAI r15 => [BP-24]\nsymbolTable: (empty)"];
28 -> 29;
20 [shape=box, label="Conditional\ncode: \nloadAI [BP-16] => r9\nloadI 5 => r10\ncmp_LT r9, r10 => r11\ncbr r11 => l3, l4\nl3:\nloadI 3 => r13\nstoreAI r13 => [BP-24]\njump l5\nl4:\nloadI 2 => r15\nstoreAI r15 => [BP-24]\nl5:"];
20 -> 21;
20 -> 24;
20 -> 28;
19 [shape=box, label="Block\ncode: \nloadAI [BP-16] => r9\nloadI 5 => r10\ncmp_LT r9, r10 => r11\ncbr r11 => l3, l4\nl3:\nloadI 3 => r13\nstoreAI r13 => [BP-24]\njump l5\nl4:\nloadI 2 => r15\nstoreAI r15 => [BP-24]\nl5:\nsymbolTable: (empty)"];
19 -> 20;
15 [shape=box, label="Conditional\ncode: \nloadAI [BP-8] => r6\nloadI 3 => r7\ncmp_LT r6, r7 => r8\ncbr r8 => l1, l2\nl1:\nloadAI [BP-16] => r9\nloadI 5 => r10\ncmp_LT r9, r10 => r11\ncbr r11 => l3, l4\nl3:\nloadI 3 => r13\nstoreAI r13 => [BP-24]\njump l5\nl4:\nloadI 2 => r15\nstoreAI r15 => [BP-24]\nl5:\nl2:"];
15 -> 16;
15 -> 19;
33 [shape=box, label="Location name='c'\nreg: r16\ncode: \nloadAI [BP-24] => r16\ntype: int"];
32 [shape=box, label="Return\ncode: \nloadAI [BP-24] => r16\ni2i r16 => RET"];
32 -> 33;
2 [shape=box, label="Block\ncode: \nloadI 2 => r1\nstoreAI r1 => [BP-8]\nloadI 3 => r3\nstoreAI r3 => [BP-16]\nloadI 1 => r5\nstoreAI r5 => [BP-24]\nloadAI [BP-8] => r6\nloadI 3 => r7\ncmp_LT r6, r7 => r8\ncbr r8 => l1, l2\nl1:\nloadAI [BP-16] => r9\nloadI 5 => r10\ncmp_LT r9, r10 => r11\ncbr r11 => l3, l4\nl3:\nloadI 3 => r13\nstoreAI r13 => [BP-24]\njump l5\nl4:\nloadI 2 => r15\nstoreAI r15 => [BP-24]\nl5:\nl2:\nloadAI [BP-24] => r16\ni2i r16 => RET\nsymbolTable: \n  a : int {stack offset=-8}\n  b : int {stack offset=-16}\n  c : int {stack offset=-24}"];
2 -> 3;
2 -> 4;
2 -> 5;
2 -> 6;
2 -> 9;
2 -> 12;
2 -> 15;
2 -> 32;
1 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -24 => SP\nloadI 2 => r1\nstoreAI r1 => [BP-8]\nloadI 3 => r3\nstoreAI r3 => [BP-16]\nloadI 1 => r5\nstoreAI r5 => [BP-24]\nloadAI [BP-8] => r6\nloadI 3 => r7\ncmp_LT r6, r7 => r8\ncbr r8 => l1, l2\nl1:\nloadAI [BP-16] => r9\nloadI 5 => r10\ncmp_LT r9, r10 => r11\ncbr r11 => l3, l4\nl3:\nloadI 3 => r13\nstoreAI r13 => [BP-24]\njump l5\nl4:\nloadI 2 => r15\nstoreAI r15 => [BP-24]\nl5:\nl2:\nloadAI [BP-24] => r16\ni2i r16 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 24\nsymbolTable: (empty)"];
1 -> 2;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int"];
0 -> 1;
}
