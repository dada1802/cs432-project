digraph AST {
1 [shape=box, label="VarDecl name='a'"];
6 [shape=box, label="Location name='a'\nreg: r0\ncode: \nloadAI [BP+16] => r0\ntype: int"];
7 [shape=box, label="Location name='b'\nreg: r1\ncode: \nloadAI [BP+24] => r1\ntype: int"];
5 [shape=box, label="BinaryOp op='+'\nreg: r2\ncode: \nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nadd r0, r1 => r2\ntype: int"];
5 -> 6;
5 -> 7;
4 [shape=box, label="Return\ncode: \nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nadd r0, r1 => r2\ni2i r2 => RET"];
4 -> 5;
3 [shape=box, label="Block\ncode: \nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nadd r0, r1 => r2\ni2i r2 => RET\nsymbolTable: (empty)"];
3 -> 4;
2 [shape=box, label="FuncDecl name='add'\ncode: \nadd:\npush BP\ni2i SP => BP\naddI SP, 0 => SP\nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nadd r0, r1 => r2\ni2i r2 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 0\nsymbolTable: \n  a : int {stack offset=16}\n  b : int {stack offset=24}"];
2 -> 3;
10 [shape=box, label="VarDecl name='c'"];
12 [shape=box, label="Location name='c'\nreg: r3\ncode: \nloadAI [BP-8] => r3\ntype: int"];
13 [shape=box, label="Literal value=2\nreg: r4\ncode: \nloadI 2 => r4\ntype: int"];
11 [shape=box, label="Assignment\ncode: \nloadI 2 => r4\nstoreAI r4 => [BP-8]"];
11 -> 12;
11 -> 13;
16 [shape=box, label="Literal value=0\nreg: r5\ncode: \nloadI 0 => r5\ntype: int"];
15 [shape=box, label="Location name='a'\nreg: r6\ncode: \nloadI 0 => r5\nloadI 256 => r7\nmultI r5, 8 => r6\ntype: int"];
15 -> 16;
17 [shape=box, label="Literal value=3\nreg: r8\ncode: \nloadI 3 => r8\ntype: int"];
14 [shape=box, label="Assignment\ncode: \nloadI 3 => r8\nloadI 0 => r5\nloadI 256 => r7\nmultI r5, 8 => r6\nstoreAO r8 => [r7+r6]"];
14 -> 15;
14 -> 17;
21 [shape=box, label="Literal value=0\nreg: r9\ncode: \nloadI 0 => r9\ntype: int"];
20 [shape=box, label="Location name='a'\nreg: r10\ncode: \nloadI 0 => r9\nloadI 256 => r11\nmultI r9, 8 => r10\ntype: int"];
20 -> 21;
22 [shape=box, label="Location name='c'\nreg: r12\ncode: \nloadAI [BP-8] => r12\ntype: int"];
19 [shape=box, label="FuncCall name='add'\nreg: r13\ncode: \nloadI 0 => r9\nloadI 256 => r11\nmultI r9, 8 => r10\nloadAO [r11+r10] => r10\nloadAI [BP-8] => r12\npush r12\npush r10\ncall add\naddI SP, 16 => SP\ni2i RET => r13\ntype: int"];
19 -> 20;
19 -> 22;
18 [shape=box, label="Return\ncode: \nloadI 0 => r9\nloadI 256 => r11\nmultI r9, 8 => r10\nloadAO [r11+r10] => r10\nloadAI [BP-8] => r12\npush r12\npush r10\ncall add\naddI SP, 16 => SP\ni2i RET => r13\ni2i r13 => RET"];
18 -> 19;
9 [shape=box, label="Block\ncode: \nloadI 2 => r4\nstoreAI r4 => [BP-8]\nloadI 3 => r8\nloadI 0 => r5\nloadI 256 => r7\nmultI r5, 8 => r6\nstoreAO r8 => [r7+r6]\nloadI 0 => r9\nloadI 256 => r11\nmultI r9, 8 => r10\nloadAO [r11+r10] => r10\nloadAI [BP-8] => r12\npush r12\npush r10\ncall add\naddI SP, 16 => SP\ni2i RET => r13\ni2i r13 => RET\nsymbolTable: \n  c : int {stack offset=-8}"];
9 -> 10;
9 -> 11;
9 -> 14;
9 -> 18;
8 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -8 => SP\nloadI 2 => r4\nstoreAI r4 => [BP-8]\nloadI 3 => r8\nloadI 0 => r5\nloadI 256 => r7\nmultI r5, 8 => r6\nstoreAO r8 => [r7+r6]\nloadI 0 => r9\nloadI 256 => r11\nmultI r9, 8 => r10\nloadAO [r11+r10] => r10\nloadAI [BP-8] => r12\npush r12\npush r10\ncall add\naddI SP, 16 => SP\ni2i RET => r13\ni2i r13 => RET\njump l1\nl1:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 8\nsymbolTable: (empty)"];
8 -> 9;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 16\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  add : (int, int) -> int\n  main : () -> int\n  a : int [2] {static offset=256}"];
0 -> 1;
0 -> 2;
0 -> 8;
}
