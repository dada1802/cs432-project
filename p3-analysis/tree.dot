digraph AST {
1 [shape=box, label="VarDecl name='nums'"];
6 [shape=box, label="Location name='n'\ntype: int"];
7 [shape=box, label="Literal value=1\ntype: int"];
5 [shape=box, label="BinaryOp op='=='\ntype: bool"];
5 -> 6;
5 -> 7;
10 [shape=box, label="Literal value=1\ntype: int"];
9 [shape=box, label="Return\ntype: int"];
9 -> 10;
8 [shape=box, label="Block\nsymbolTable: (empty)"];
8 -> 9;
4 [shape=box, label="Conditional\ntype: bool"];
4 -> 5;
4 -> 8;
13 [shape=box, label="Location name='n'\ntype: int"];
16 [shape=box, label="Location name='n'\ntype: int"];
17 [shape=box, label="Literal value=1\ntype: int"];
15 [shape=box, label="BinaryOp op='-'\ntype: int"];
15 -> 16;
15 -> 17;
14 [shape=box, label="FuncCall name='fact'\ntype: int"];
14 -> 15;
12 [shape=box, label="BinaryOp op='*'\ntype: int"];
12 -> 13;
12 -> 14;
11 [shape=box, label="Return\ntype: int"];
11 -> 12;
3 [shape=box, label="Block\nsymbolTable: (empty)"];
3 -> 4;
3 -> 11;
2 [shape=box, label="FuncDecl name='fact'\nsymbolTable: \n  n : int"];
2 -> 3;
22 [shape=box, label="Location name='n'\ntype: int"];
23 [shape=box, label="Literal value=0\ntype: int"];
21 [shape=box, label="BinaryOp op='=='\ntype: bool"];
21 -> 22;
21 -> 23;
26 [shape=box, label="Literal value=0\ntype: int"];
25 [shape=box, label="Return\ntype: int"];
25 -> 26;
24 [shape=box, label="Block\nsymbolTable: (empty)"];
24 -> 25;
20 [shape=box, label="Conditional\ntype: bool"];
20 -> 21;
20 -> 24;
29 [shape=box, label="Location name='n'\ntype: int"];
30 [shape=box, label="Literal value=1\ntype: int"];
28 [shape=box, label="BinaryOp op='=='\ntype: bool"];
28 -> 29;
28 -> 30;
33 [shape=box, label="Literal value=1\ntype: int"];
32 [shape=box, label="Return\ntype: int"];
32 -> 33;
31 [shape=box, label="Block\nsymbolTable: (empty)"];
31 -> 32;
27 [shape=box, label="Conditional\ntype: bool"];
27 -> 28;
27 -> 31;
38 [shape=box, label="Location name='n'\ntype: int"];
39 [shape=box, label="Literal value=1\ntype: int"];
37 [shape=box, label="BinaryOp op='-'\ntype: int"];
37 -> 38;
37 -> 39;
36 [shape=box, label="FuncCall name='fib'\ntype: int"];
36 -> 37;
42 [shape=box, label="Location name='n'\ntype: int"];
43 [shape=box, label="Literal value=2\ntype: int"];
41 [shape=box, label="BinaryOp op='-'\ntype: int"];
41 -> 42;
41 -> 43;
40 [shape=box, label="FuncCall name='fib'\ntype: int"];
40 -> 41;
35 [shape=box, label="BinaryOp op='+'\ntype: int"];
35 -> 36;
35 -> 40;
34 [shape=box, label="Return\ntype: int"];
34 -> 35;
19 [shape=box, label="Block\nsymbolTable: (empty)"];
19 -> 20;
19 -> 27;
19 -> 34;
18 [shape=box, label="FuncDecl name='fib'\nsymbolTable: \n  n : int"];
18 -> 19;
46 [shape=box, label="VarDecl name='i'"];
48 [shape=box, label="Location name='i'\ntype: int"];
49 [shape=box, label="Literal value=2\ntype: int"];
47 [shape=box, label="Assignment\ntype: invalid"];
47 -> 48;
47 -> 49;
53 [shape=box, label="Location name='n'\ntype: int"];
54 [shape=box, label="Literal value=0\ntype: int"];
52 [shape=box, label="BinaryOp op='=='\ntype: bool"];
52 -> 53;
52 -> 54;
56 [shape=box, label="Location name='n'\ntype: int"];
57 [shape=box, label="Literal value=1\ntype: int"];
55 [shape=box, label="BinaryOp op='=='\ntype: bool"];
55 -> 56;
55 -> 57;
51 [shape=box, label="BinaryOp op='||'\ntype: bool"];
51 -> 52;
51 -> 55;
60 [shape=box, label="Literal value=false\ntype: bool"];
59 [shape=box, label="Return\ntype: bool"];
59 -> 60;
58 [shape=box, label="Block\nsymbolTable: (empty)"];
58 -> 59;
50 [shape=box, label="Conditional\ntype: bool"];
50 -> 51;
50 -> 58;
63 [shape=box, label="Location name='i'\ntype: int"];
64 [shape=box, label="Location name='n'\ntype: int"];
62 [shape=box, label="BinaryOp op='<'\ntype: bool"];
62 -> 63;
62 -> 64;
69 [shape=box, label="Location name='n'\ntype: int"];
70 [shape=box, label="Location name='i'\ntype: int"];
68 [shape=box, label="BinaryOp op='%'\ntype: int"];
68 -> 69;
68 -> 70;
71 [shape=box, label="Literal value=0\ntype: int"];
67 [shape=box, label="BinaryOp op='=='\ntype: bool"];
67 -> 68;
67 -> 71;
74 [shape=box, label="Literal value=false\ntype: bool"];
73 [shape=box, label="Return\ntype: bool"];
73 -> 74;
72 [shape=box, label="Block\nsymbolTable: (empty)"];
72 -> 73;
66 [shape=box, label="Conditional\ntype: bool"];
66 -> 67;
66 -> 72;
76 [shape=box, label="Location name='i'\ntype: int"];
78 [shape=box, label="Location name='i'\ntype: int"];
79 [shape=box, label="Literal value=1\ntype: int"];
77 [shape=box, label="BinaryOp op='+'\ntype: int"];
77 -> 78;
77 -> 79;
75 [shape=box, label="Assignment\ntype: invalid"];
75 -> 76;
75 -> 77;
65 [shape=box, label="Block\nsymbolTable: (empty)"];
65 -> 66;
65 -> 75;
61 [shape=box, label="WhileLoop\ntype: bool"];
61 -> 62;
61 -> 65;
81 [shape=box, label="Literal value=true\ntype: bool"];
80 [shape=box, label="Return\ntype: bool"];
80 -> 81;
45 [shape=box, label="Block\nsymbolTable: \n  i : int"];
45 -> 46;
45 -> 47;
45 -> 50;
45 -> 61;
45 -> 80;
44 [shape=box, label="FuncDecl name='is_prime'\nsymbolTable: \n  n : int"];
44 -> 45;
86 [shape=box, label="Location name='a'\ntype: int"];
87 [shape=box, label="Location name='b'\ntype: int"];
85 [shape=box, label="BinaryOp op='<'\ntype: bool"];
85 -> 86;
85 -> 87;
90 [shape=box, label="Location name='a'\ntype: int"];
89 [shape=box, label="Return\ntype: int"];
89 -> 90;
88 [shape=box, label="Block\nsymbolTable: (empty)"];
88 -> 89;
84 [shape=box, label="Conditional\ntype: bool"];
84 -> 85;
84 -> 88;
92 [shape=box, label="Location name='b'\ntype: int"];
91 [shape=box, label="Return\ntype: int"];
91 -> 92;
83 [shape=box, label="Block\nsymbolTable: (empty)"];
83 -> 84;
83 -> 91;
82 [shape=box, label="FuncDecl name='min'\nsymbolTable: \n  a : int\n  b : int"];
82 -> 83;
95 [shape=box, label="VarDecl name='m'"];
97 [shape=box, label="Location name='m'\ntype: int"];
99 [shape=box, label="Location name='a'\ntype: int"];
100 [shape=box, label="Location name='b'\ntype: int"];
98 [shape=box, label="FuncCall name='min'\ntype: int"];
98 -> 99;
98 -> 100;
96 [shape=box, label="Assignment\ntype: invalid"];
96 -> 97;
96 -> 98;
103 [shape=box, label="Location name='m'\ntype: int"];
104 [shape=box, label="Literal value=0\ntype: int"];
102 [shape=box, label="BinaryOp op='>'\ntype: bool"];
102 -> 103;
102 -> 104;
110 [shape=box, label="Location name='a'\ntype: int"];
111 [shape=box, label="Location name='m'\ntype: int"];
109 [shape=box, label="BinaryOp op='%'\ntype: int"];
109 -> 110;
109 -> 111;
112 [shape=box, label="Literal value=0\ntype: int"];
108 [shape=box, label="BinaryOp op='=='\ntype: bool"];
108 -> 109;
108 -> 112;
115 [shape=box, label="Location name='b'\ntype: int"];
116 [shape=box, label="Location name='m'\ntype: int"];
114 [shape=box, label="BinaryOp op='%'\ntype: int"];
114 -> 115;
114 -> 116;
117 [shape=box, label="Literal value=0\ntype: int"];
113 [shape=box, label="BinaryOp op='=='\ntype: bool"];
113 -> 114;
113 -> 117;
107 [shape=box, label="BinaryOp op='&&'\ntype: bool"];
107 -> 108;
107 -> 113;
120 [shape=box, label="Location name='m'\ntype: int"];
119 [shape=box, label="Return\ntype: int"];
119 -> 120;
118 [shape=box, label="Block\nsymbolTable: (empty)"];
118 -> 119;
106 [shape=box, label="Conditional\ntype: bool"];
106 -> 107;
106 -> 118;
122 [shape=box, label="Location name='m'\ntype: int"];
124 [shape=box, label="Location name='m'\ntype: int"];
125 [shape=box, label="Literal value=1\ntype: int"];
123 [shape=box, label="BinaryOp op='-'\ntype: int"];
123 -> 124;
123 -> 125;
121 [shape=box, label="Assignment\ntype: invalid"];
121 -> 122;
121 -> 123;
105 [shape=box, label="Block\nsymbolTable: (empty)"];
105 -> 106;
105 -> 121;
101 [shape=box, label="WhileLoop\ntype: bool"];
101 -> 102;
101 -> 105;
94 [shape=box, label="Block\nsymbolTable: \n  m : int"];
94 -> 95;
94 -> 96;
94 -> 101;
93 [shape=box, label="FuncDecl name='gcd'\nsymbolTable: \n  a : int\n  b : int"];
93 -> 94;
130 [shape=box, label="Location name='len'\ntype: int"];
131 [shape=box, label="Literal value=0\ntype: int"];
129 [shape=box, label="BinaryOp op='=='\ntype: bool"];
129 -> 130;
129 -> 131;
134 [shape=box, label="Literal value=0\ntype: int"];
133 [shape=box, label="Return\ntype: int"];
133 -> 134;
132 [shape=box, label="Block\nsymbolTable: (empty)"];
132 -> 133;
128 [shape=box, label="Conditional\ntype: bool"];
128 -> 129;
128 -> 132;
136 [shape=box, label="Location name='len'\ntype: int"];
138 [shape=box, label="Location name='len'\ntype: int"];
139 [shape=box, label="Literal value=1\ntype: int"];
137 [shape=box, label="BinaryOp op='-'\ntype: int"];
137 -> 138;
137 -> 139;
135 [shape=box, label="Assignment\ntype: invalid"];
135 -> 136;
135 -> 137;
143 [shape=box, label="Location name='len'\ntype: int"];
142 [shape=box, label="Location name='nums'\ntype: int"];
142 -> 143;
145 [shape=box, label="Location name='len'\ntype: int"];
144 [shape=box, label="FuncCall name='sum_nums'\ntype: int"];
144 -> 145;
141 [shape=box, label="BinaryOp op='+'\ntype: int"];
141 -> 142;
141 -> 144;
140 [shape=box, label="Return\ntype: int"];
140 -> 141;
127 [shape=box, label="Block\nsymbolTable: (empty)"];
127 -> 128;
127 -> 135;
127 -> 140;
126 [shape=box, label="FuncDecl name='sum_nums'\nsymbolTable: \n  len : int"];
126 -> 127;
148 [shape=box, label="VarDecl name='check'"];
150 [shape=box, label="Location name='check'\ntype: bool"];
151 [shape=box, label="Literal value=true\ntype: bool"];
149 [shape=box, label="Assignment\ntype: invalid"];
149 -> 150;
149 -> 151;
154 [shape=box, label="Location name='len'\ntype: int"];
155 [shape=box, label="Literal value=1\ntype: int"];
153 [shape=box, label="BinaryOp op='>'\ntype: bool"];
153 -> 154;
153 -> 155;
158 [shape=box, label="Location name='check'\ntype: bool"];
160 [shape=box, label="VarDecl name='i'"];
162 [shape=box, label="Location name='i'\ntype: int"];
163 [shape=box, label="Literal value=0\ntype: int"];
161 [shape=box, label="Assignment\ntype: invalid"];
161 -> 162;
161 -> 163;
165 [shape=box, label="Location name='check'\ntype: bool"];
166 [shape=box, label="Literal value=false\ntype: bool"];
164 [shape=box, label="Assignment\ntype: invalid"];
164 -> 165;
164 -> 166;
169 [shape=box, label="Location name='i'\ntype: int"];
171 [shape=box, label="Location name='len'\ntype: int"];
172 [shape=box, label="Literal value=1\ntype: int"];
170 [shape=box, label="BinaryOp op='-'\ntype: int"];
170 -> 171;
170 -> 172;
168 [shape=box, label="BinaryOp op='<'\ntype: bool"];
168 -> 169;
168 -> 170;
177 [shape=box, label="Location name='i'\ntype: int"];
176 [shape=box, label="Location name='nums'\ntype: int"];
176 -> 177;
180 [shape=box, label="Location name='i'\ntype: int"];
181 [shape=box, label="Literal value=1\ntype: int"];
179 [shape=box, label="BinaryOp op='+'\ntype: int"];
179 -> 180;
179 -> 181;
178 [shape=box, label="Location name='nums'\ntype: int"];
178 -> 179;
175 [shape=box, label="BinaryOp op='>'\ntype: bool"];
175 -> 176;
175 -> 178;
183 [shape=box, label="VarDecl name='temp'"];
185 [shape=box, label="Location name='temp'\ntype: int"];
187 [shape=box, label="Location name='i'\ntype: int"];
186 [shape=box, label="Location name='nums'\ntype: int"];
186 -> 187;
184 [shape=box, label="Assignment\ntype: invalid"];
184 -> 185;
184 -> 186;
190 [shape=box, label="Location name='i'\ntype: int"];
189 [shape=box, label="Location name='nums'\ntype: int"];
189 -> 190;
193 [shape=box, label="Location name='i'\ntype: int"];
194 [shape=box, label="Literal value=1\ntype: int"];
192 [shape=box, label="BinaryOp op='+'\ntype: int"];
192 -> 193;
192 -> 194;
191 [shape=box, label="Location name='nums'\ntype: int"];
191 -> 192;
188 [shape=box, label="Assignment\ntype: invalid"];
188 -> 189;
188 -> 191;
198 [shape=box, label="Location name='i'\ntype: int"];
199 [shape=box, label="Literal value=1\ntype: int"];
197 [shape=box, label="BinaryOp op='+'\ntype: int"];
197 -> 198;
197 -> 199;
196 [shape=box, label="Location name='nums'\ntype: int"];
196 -> 197;
200 [shape=box, label="Location name='temp'\ntype: int"];
195 [shape=box, label="Assignment\ntype: invalid"];
195 -> 196;
195 -> 200;
202 [shape=box, label="Location name='check'\ntype: bool"];
203 [shape=box, label="Literal value=true\ntype: bool"];
201 [shape=box, label="Assignment\ntype: invalid"];
201 -> 202;
201 -> 203;
182 [shape=box, label="Block\nsymbolTable: \n  temp : int"];
182 -> 183;
182 -> 184;
182 -> 188;
182 -> 195;
182 -> 201;
174 [shape=box, label="Conditional\ntype: bool"];
174 -> 175;
174 -> 182;
205 [shape=box, label="Location name='i'\ntype: int"];
207 [shape=box, label="Location name='i'\ntype: int"];
208 [shape=box, label="Literal value=1\ntype: int"];
206 [shape=box, label="BinaryOp op='+'\ntype: int"];
206 -> 207;
206 -> 208;
204 [shape=box, label="Assignment\ntype: invalid"];
204 -> 205;
204 -> 206;
173 [shape=box, label="Block\nsymbolTable: (empty)"];
173 -> 174;
173 -> 204;
167 [shape=box, label="WhileLoop\ntype: bool"];
167 -> 168;
167 -> 173;
159 [shape=box, label="Block\nsymbolTable: \n  i : int"];
159 -> 160;
159 -> 161;
159 -> 164;
159 -> 167;
157 [shape=box, label="WhileLoop\ntype: bool"];
157 -> 158;
157 -> 159;
156 [shape=box, label="Block\nsymbolTable: (empty)"];
156 -> 157;
152 [shape=box, label="Conditional\ntype: bool"];
152 -> 153;
152 -> 156;
147 [shape=box, label="Block\nsymbolTable: \n  check : bool"];
147 -> 148;
147 -> 149;
147 -> 152;
146 [shape=box, label="FuncDecl name='sort_nums'\nsymbolTable: \n  len : int"];
146 -> 147;
211 [shape=box, label="VarDecl name='i'"];
212 [shape=box, label="VarDecl name='num_spaces'"];
214 [shape=box, label="Location name='i'\ntype: int"];
215 [shape=box, label="Literal value=1\ntype: int"];
213 [shape=box, label="Assignment\ntype: invalid"];
213 -> 214;
213 -> 215;
217 [shape=box, label="Location name='num_spaces'\ntype: int"];
219 [shape=box, label="Location name='base'\ntype: int"];
220 [shape=box, label="Literal value=2\ntype: int"];
218 [shape=box, label="BinaryOp op='/'\ntype: int"];
218 -> 219;
218 -> 220;
216 [shape=box, label="Assignment\ntype: invalid"];
216 -> 217;
216 -> 218;
224 [shape=box, label="Location name='base'\ntype: int"];
225 [shape=box, label="Literal value=2\ntype: int"];
223 [shape=box, label="BinaryOp op='%'\ntype: int"];
223 -> 224;
223 -> 225;
226 [shape=box, label="Literal value=0\ntype: int"];
222 [shape=box, label="BinaryOp op='=='\ntype: bool"];
222 -> 223;
222 -> 226;
229 [shape=box, label="Location name='i'\ntype: int"];
230 [shape=box, label="Literal value=2\ntype: int"];
228 [shape=box, label="Assignment\ntype: invalid"];
228 -> 229;
228 -> 230;
232 [shape=box, label="Location name='num_spaces'\ntype: int"];
234 [shape=box, label="Location name='num_spaces'\ntype: int"];
235 [shape=box, label="Literal value=1\ntype: int"];
233 [shape=box, label="BinaryOp op='-'\ntype: int"];
233 -> 234;
233 -> 235;
231 [shape=box, label="Assignment\ntype: invalid"];
231 -> 232;
231 -> 233;
227 [shape=box, label="Block\nsymbolTable: (empty)"];
227 -> 228;
227 -> 231;
221 [shape=box, label="Conditional\ntype: bool"];
221 -> 222;
221 -> 227;
238 [shape=box, label="Location name='base'\ntype: int"];
239 [shape=box, label="Literal value=2\ntype: int"];
237 [shape=box, label="BinaryOp op='<='\ntype: bool"];
237 -> 238;
237 -> 239;
243 [shape=box, label="Location name='base'\ntype: int"];
244 [shape=box, label="Literal value=1\ntype: int"];
242 [shape=box, label="BinaryOp op='=='\ntype: bool"];
242 -> 243;
242 -> 244;
247 [shape=box, label="Literal value='#'\ntype: str"];
246 [shape=box, label="FuncCall name='print_str'\ntype: void"];
246 -> 247;
245 [shape=box, label="Block\nsymbolTable: (empty)"];
245 -> 246;
250 [shape=box, label="Literal value='##'\ntype: str"];
249 [shape=box, label="FuncCall name='print_str'\ntype: void"];
249 -> 250;
248 [shape=box, label="Block\nsymbolTable: (empty)"];
248 -> 249;
241 [shape=box, label="Conditional\ntype: bool"];
241 -> 242;
241 -> 245;
241 -> 248;
240 [shape=box, label="Block\nsymbolTable: (empty)"];
240 -> 241;
254 [shape=box, label="Location name='i'\ntype: int"];
255 [shape=box, label="Location name='base'\ntype: int"];
253 [shape=box, label="BinaryOp op='<='\ntype: bool"];
253 -> 254;
253 -> 255;
257 [shape=box, label="VarDecl name='n'"];
258 [shape=box, label="VarDecl name='spaces'"];
260 [shape=box, label="Location name='n'\ntype: int"];
261 [shape=box, label="Literal value=0\ntype: int"];
259 [shape=box, label="Assignment\ntype: invalid"];
259 -> 260;
259 -> 261;
263 [shape=box, label="Location name='spaces'\ntype: int"];
264 [shape=box, label="Literal value=0\ntype: int"];
262 [shape=box, label="Assignment\ntype: invalid"];
262 -> 263;
262 -> 264;
267 [shape=box, label="Location name='spaces'\ntype: int"];
268 [shape=box, label="Location name='num_spaces'\ntype: int"];
266 [shape=box, label="BinaryOp op='<'\ntype: bool"];
266 -> 267;
266 -> 268;
271 [shape=box, label="Literal value=' '\ntype: str"];
270 [shape=box, label="FuncCall name='print_str'\ntype: void"];
270 -> 271;
273 [shape=box, label="Location name='spaces'\ntype: int"];
275 [shape=box, label="Location name='spaces'\ntype: int"];
276 [shape=box, label="Literal value=1\ntype: int"];
274 [shape=box, label="BinaryOp op='+'\ntype: int"];
274 -> 275;
274 -> 276;
272 [shape=box, label="Assignment\ntype: invalid"];
272 -> 273;
272 -> 274;
269 [shape=box, label="Block\nsymbolTable: (empty)"];
269 -> 270;
269 -> 272;
265 [shape=box, label="WhileLoop\ntype: bool"];
265 -> 266;
265 -> 269;
279 [shape=box, label="Location name='n'\ntype: int"];
280 [shape=box, label="Location name='i'\ntype: int"];
278 [shape=box, label="BinaryOp op='<'\ntype: bool"];
278 -> 279;
278 -> 280;
283 [shape=box, label="Literal value='#'\ntype: str"];
282 [shape=box, label="FuncCall name='print_str'\ntype: void"];
282 -> 283;
285 [shape=box, label="Location name='n'\ntype: int"];
287 [shape=box, label="Location name='n'\ntype: int"];
288 [shape=box, label="Literal value=1\ntype: int"];
286 [shape=box, label="BinaryOp op='+'\ntype: int"];
286 -> 287;
286 -> 288;
284 [shape=box, label="Assignment\ntype: invalid"];
284 -> 285;
284 -> 286;
281 [shape=box, label="Block\nsymbolTable: (empty)"];
281 -> 282;
281 -> 284;
277 [shape=box, label="WhileLoop\ntype: bool"];
277 -> 278;
277 -> 281;
291 [shape=box, label="Location name='spaces'\ntype: int"];
292 [shape=box, label="Literal value=0\ntype: int"];
290 [shape=box, label="BinaryOp op='>'\ntype: bool"];
290 -> 291;
290 -> 292;
295 [shape=box, label="Literal value=' '\ntype: str"];
294 [shape=box, label="FuncCall name='print_str'\ntype: void"];
294 -> 295;
297 [shape=box, label="Location name='spaces'\ntype: int"];
299 [shape=box, label="Location name='spaces'\ntype: int"];
300 [shape=box, label="Literal value=1\ntype: int"];
298 [shape=box, label="BinaryOp op='-'\ntype: int"];
298 -> 299;
298 -> 300;
296 [shape=box, label="Assignment\ntype: invalid"];
296 -> 297;
296 -> 298;
293 [shape=box, label="Block\nsymbolTable: (empty)"];
293 -> 294;
293 -> 296;
289 [shape=box, label="WhileLoop\ntype: bool"];
289 -> 290;
289 -> 293;
303 [shape=box, label="Location name='i'\ntype: int"];
304 [shape=box, label="Location name='base'\ntype: int"];
302 [shape=box, label="BinaryOp op='<'\ntype: bool"];
302 -> 303;
302 -> 304;
307 [shape=box, label="Literal value='\\n'\ntype: str"];
306 [shape=box, label="FuncCall name='print_str'\ntype: void"];
306 -> 307;
305 [shape=box, label="Block\nsymbolTable: (empty)"];
305 -> 306;
301 [shape=box, label="Conditional\ntype: bool"];
301 -> 302;
301 -> 305;
309 [shape=box, label="Location name='i'\ntype: int"];
311 [shape=box, label="Location name='i'\ntype: int"];
312 [shape=box, label="Literal value=2\ntype: int"];
310 [shape=box, label="BinaryOp op='+'\ntype: int"];
310 -> 311;
310 -> 312;
308 [shape=box, label="Assignment\ntype: invalid"];
308 -> 309;
308 -> 310;
314 [shape=box, label="Location name='num_spaces'\ntype: int"];
316 [shape=box, label="Location name='num_spaces'\ntype: int"];
317 [shape=box, label="Literal value=1\ntype: int"];
315 [shape=box, label="BinaryOp op='-'\ntype: int"];
315 -> 316;
315 -> 317;
313 [shape=box, label="Assignment\ntype: invalid"];
313 -> 314;
313 -> 315;
256 [shape=box, label="Block\nsymbolTable: \n  n : int\n  spaces : int"];
256 -> 257;
256 -> 258;
256 -> 259;
256 -> 262;
256 -> 265;
256 -> 277;
256 -> 289;
256 -> 301;
256 -> 308;
256 -> 313;
252 [shape=box, label="WhileLoop\ntype: bool"];
252 -> 253;
252 -> 256;
251 [shape=box, label="Block\nsymbolTable: (empty)"];
251 -> 252;
236 [shape=box, label="Conditional\ntype: bool"];
236 -> 237;
236 -> 240;
236 -> 251;
210 [shape=box, label="Block\nsymbolTable: \n  i : int\n  num_spaces : int"];
210 -> 211;
210 -> 212;
210 -> 213;
210 -> 216;
210 -> 221;
210 -> 236;
209 [shape=box, label="FuncDecl name='draw_triangle'\nsymbolTable: \n  base : int"];
209 -> 210;
320 [shape=box, label="VarDecl name='x'"];
322 [shape=box, label="Literal value='Test fact() function.\\n'\ntype: str"];
321 [shape=box, label="FuncCall name='print_str'\ntype: void"];
321 -> 322;
325 [shape=box, label="Literal value=1\ntype: int"];
324 [shape=box, label="FuncCall name='fact'\ntype: int"];
324 -> 325;
323 [shape=box, label="FuncCall name='print_int'\ntype: void"];
323 -> 324;
327 [shape=box, label="Literal value='\\n'\ntype: str"];
326 [shape=box, label="FuncCall name='print_str'\ntype: void"];
326 -> 327;
330 [shape=box, label="Literal value=10\ntype: int"];
329 [shape=box, label="FuncCall name='fact'\ntype: int"];
329 -> 330;
328 [shape=box, label="FuncCall name='print_int'\ntype: void"];
328 -> 329;
332 [shape=box, label="Literal value='\\n'\ntype: str"];
331 [shape=box, label="FuncCall name='print_str'\ntype: void"];
331 -> 332;
334 [shape=box, label="Literal value='\\nTest fib() function.\\n'\ntype: str"];
333 [shape=box, label="FuncCall name='print_str'\ntype: void"];
333 -> 334;
337 [shape=box, label="Literal value=0\ntype: int"];
336 [shape=box, label="FuncCall name='fib'\ntype: int"];
336 -> 337;
335 [shape=box, label="FuncCall name='print_int'\ntype: void"];
335 -> 336;
339 [shape=box, label="Literal value='\\n'\ntype: str"];
338 [shape=box, label="FuncCall name='print_str'\ntype: void"];
338 -> 339;
342 [shape=box, label="Literal value=25\ntype: int"];
341 [shape=box, label="FuncCall name='fib'\ntype: int"];
341 -> 342;
340 [shape=box, label="FuncCall name='print_int'\ntype: void"];
340 -> 341;
344 [shape=box, label="Literal value='\\n'\ntype: str"];
343 [shape=box, label="FuncCall name='print_str'\ntype: void"];
343 -> 344;
346 [shape=box, label="Literal value='\\nTest is_prime() function.\\n'\ntype: str"];
345 [shape=box, label="FuncCall name='print_str'\ntype: void"];
345 -> 346;
349 [shape=box, label="Literal value=0\ntype: int"];
348 [shape=box, label="FuncCall name='is_prime'\ntype: bool"];
348 -> 349;
347 [shape=box, label="FuncCall name='print_bool'\ntype: void"];
347 -> 348;
351 [shape=box, label="Literal value='\\n'\ntype: str"];
350 [shape=box, label="FuncCall name='print_str'\ntype: void"];
350 -> 351;
354 [shape=box, label="Literal value=3\ntype: int"];
353 [shape=box, label="FuncCall name='is_prime'\ntype: bool"];
353 -> 354;
352 [shape=box, label="FuncCall name='print_bool'\ntype: void"];
352 -> 353;
356 [shape=box, label="Literal value='\\n'\ntype: str"];
355 [shape=box, label="FuncCall name='print_str'\ntype: void"];
355 -> 356;
359 [shape=box, label="Literal value=599\ntype: int"];
358 [shape=box, label="FuncCall name='is_prime'\ntype: bool"];
358 -> 359;
357 [shape=box, label="FuncCall name='print_bool'\ntype: void"];
357 -> 358;
361 [shape=box, label="Literal value='\\n'\ntype: str"];
360 [shape=box, label="FuncCall name='print_str'\ntype: void"];
360 -> 361;
364 [shape=box, label="Literal value=600\ntype: int"];
363 [shape=box, label="FuncCall name='is_prime'\ntype: bool"];
363 -> 364;
362 [shape=box, label="FuncCall name='print_bool'\ntype: void"];
362 -> 363;
366 [shape=box, label="Literal value='\\n'\ntype: str"];
365 [shape=box, label="FuncCall name='print_str'\ntype: void"];
365 -> 366;
368 [shape=box, label="Literal value='\\nTest gcd() function.\\n'\ntype: str"];
367 [shape=box, label="FuncCall name='print_str'\ntype: void"];
367 -> 368;
371 [shape=box, label="Literal value=18\ntype: int"];
372 [shape=box, label="Literal value=198\ntype: int"];
370 [shape=box, label="FuncCall name='gcd'\ntype: int"];
370 -> 371;
370 -> 372;
369 [shape=box, label="FuncCall name='print_int'\ntype: void"];
369 -> 370;
374 [shape=box, label="Literal value='\\n'\ntype: str"];
373 [shape=box, label="FuncCall name='print_str'\ntype: void"];
373 -> 374;
376 [shape=box, label="Literal value='\\nTest sum_nums() function.\\n'\ntype: str"];
375 [shape=box, label="FuncCall name='print_str'\ntype: void"];
375 -> 376;
379 [shape=box, label="Literal value=0\ntype: int"];
378 [shape=box, label="Location name='nums'\ntype: int"];
378 -> 379;
380 [shape=box, label="Literal value=1\ntype: int"];
377 [shape=box, label="Assignment\ntype: invalid"];
377 -> 378;
377 -> 380;
383 [shape=box, label="Literal value=1\ntype: int"];
382 [shape=box, label="Location name='nums'\ntype: int"];
382 -> 383;
384 [shape=box, label="Literal value=2\ntype: int"];
381 [shape=box, label="Assignment\ntype: invalid"];
381 -> 382;
381 -> 384;
387 [shape=box, label="Literal value=2\ntype: int"];
386 [shape=box, label="Location name='nums'\ntype: int"];
386 -> 387;
388 [shape=box, label="Literal value=3\ntype: int"];
385 [shape=box, label="Assignment\ntype: invalid"];
385 -> 386;
385 -> 388;
391 [shape=box, label="Literal value=0\ntype: int"];
390 [shape=box, label="FuncCall name='sum_nums'\ntype: int"];
390 -> 391;
389 [shape=box, label="FuncCall name='print_int'\ntype: void"];
389 -> 390;
393 [shape=box, label="Literal value='\\n'\ntype: str"];
392 [shape=box, label="FuncCall name='print_str'\ntype: void"];
392 -> 393;
396 [shape=box, label="Literal value=3\ntype: int"];
395 [shape=box, label="FuncCall name='sum_nums'\ntype: int"];
395 -> 396;
394 [shape=box, label="FuncCall name='print_int'\ntype: void"];
394 -> 395;
398 [shape=box, label="Literal value='\\n'\ntype: str"];
397 [shape=box, label="FuncCall name='print_str'\ntype: void"];
397 -> 398;
400 [shape=box, label="Literal value='\\nTest sort_nums() function.\\n'\ntype: str"];
399 [shape=box, label="FuncCall name='print_str'\ntype: void"];
399 -> 400;
403 [shape=box, label="Literal value=0\ntype: int"];
402 [shape=box, label="Location name='nums'\ntype: int"];
402 -> 403;
404 [shape=box, label="Literal value=15\ntype: int"];
401 [shape=box, label="Assignment\ntype: invalid"];
401 -> 402;
401 -> 404;
407 [shape=box, label="Literal value=1\ntype: int"];
406 [shape=box, label="Location name='nums'\ntype: int"];
406 -> 407;
408 [shape=box, label="Literal value=13\ntype: int"];
405 [shape=box, label="Assignment\ntype: invalid"];
405 -> 406;
405 -> 408;
411 [shape=box, label="Literal value=2\ntype: int"];
410 [shape=box, label="Location name='nums'\ntype: int"];
410 -> 411;
412 [shape=box, label="Literal value=9\ntype: int"];
409 [shape=box, label="Assignment\ntype: invalid"];
409 -> 410;
409 -> 412;
415 [shape=box, label="Literal value=3\ntype: int"];
414 [shape=box, label="Location name='nums'\ntype: int"];
414 -> 415;
416 [shape=box, label="Literal value=5\ntype: int"];
413 [shape=box, label="Assignment\ntype: invalid"];
413 -> 414;
413 -> 416;
419 [shape=box, label="Literal value=4\ntype: int"];
418 [shape=box, label="Location name='nums'\ntype: int"];
418 -> 419;
420 [shape=box, label="Literal value=2\ntype: int"];
417 [shape=box, label="Assignment\ntype: invalid"];
417 -> 418;
417 -> 420;
422 [shape=box, label="Literal value=5\ntype: int"];
421 [shape=box, label="FuncCall name='sort_nums'\ntype: void"];
421 -> 422;
424 [shape=box, label="Location name='x'\ntype: int"];
425 [shape=box, label="Literal value=0\ntype: int"];
423 [shape=box, label="Assignment\ntype: invalid"];
423 -> 424;
423 -> 425;
428 [shape=box, label="Location name='x'\ntype: int"];
429 [shape=box, label="Literal value=5\ntype: int"];
427 [shape=box, label="BinaryOp op='<'\ntype: bool"];
427 -> 428;
427 -> 429;
433 [shape=box, label="Location name='x'\ntype: int"];
432 [shape=box, label="Location name='nums'\ntype: int"];
432 -> 433;
431 [shape=box, label="FuncCall name='print_int'\ntype: void"];
431 -> 432;
435 [shape=box, label="Literal value='\\n'\ntype: str"];
434 [shape=box, label="FuncCall name='print_str'\ntype: void"];
434 -> 435;
437 [shape=box, label="Location name='x'\ntype: int"];
439 [shape=box, label="Location name='x'\ntype: int"];
440 [shape=box, label="Literal value=1\ntype: int"];
438 [shape=box, label="BinaryOp op='+'\ntype: int"];
438 -> 439;
438 -> 440;
436 [shape=box, label="Assignment\ntype: invalid"];
436 -> 437;
436 -> 438;
430 [shape=box, label="Block\nsymbolTable: (empty)"];
430 -> 431;
430 -> 434;
430 -> 436;
426 [shape=box, label="WhileLoop\ntype: bool"];
426 -> 427;
426 -> 430;
442 [shape=box, label="Literal value='\\n'\ntype: str"];
441 [shape=box, label="FuncCall name='print_str'\ntype: void"];
441 -> 442;
444 [shape=box, label="Literal value='\\nTest draw_triangle() function.\\n'\ntype: str"];
443 [shape=box, label="FuncCall name='print_str'\ntype: void"];
443 -> 444;
446 [shape=box, label="Literal value=1\ntype: int"];
445 [shape=box, label="FuncCall name='draw_triangle'\ntype: void"];
445 -> 446;
448 [shape=box, label="Literal value='\\n'\ntype: str"];
447 [shape=box, label="FuncCall name='print_str'\ntype: void"];
447 -> 448;
450 [shape=box, label="Literal value=2\ntype: int"];
449 [shape=box, label="FuncCall name='draw_triangle'\ntype: void"];
449 -> 450;
452 [shape=box, label="Literal value='\\n'\ntype: str"];
451 [shape=box, label="FuncCall name='print_str'\ntype: void"];
451 -> 452;
454 [shape=box, label="Literal value=5\ntype: int"];
453 [shape=box, label="FuncCall name='draw_triangle'\ntype: void"];
453 -> 454;
456 [shape=box, label="Literal value='\\n'\ntype: str"];
455 [shape=box, label="FuncCall name='print_str'\ntype: void"];
455 -> 456;
458 [shape=box, label="Literal value=8\ntype: int"];
457 [shape=box, label="FuncCall name='draw_triangle'\ntype: void"];
457 -> 458;
460 [shape=box, label="Literal value='\\n'\ntype: str"];
459 [shape=box, label="FuncCall name='print_str'\ntype: void"];
459 -> 460;
462 [shape=box, label="Literal value=0\ntype: int"];
461 [shape=box, label="Return\ntype: int"];
461 -> 462;
319 [shape=box, label="Block\nsymbolTable: \n  x : int"];
319 -> 320;
319 -> 321;
319 -> 323;
319 -> 326;
319 -> 328;
319 -> 331;
319 -> 333;
319 -> 335;
319 -> 338;
319 -> 340;
319 -> 343;
319 -> 345;
319 -> 347;
319 -> 350;
319 -> 352;
319 -> 355;
319 -> 357;
319 -> 360;
319 -> 362;
319 -> 365;
319 -> 367;
319 -> 369;
319 -> 373;
319 -> 375;
319 -> 377;
319 -> 381;
319 -> 385;
319 -> 389;
319 -> 392;
319 -> 394;
319 -> 397;
319 -> 399;
319 -> 401;
319 -> 405;
319 -> 409;
319 -> 413;
319 -> 417;
319 -> 421;
319 -> 423;
319 -> 426;
319 -> 441;
319 -> 443;
319 -> 445;
319 -> 447;
319 -> 449;
319 -> 451;
319 -> 453;
319 -> 455;
319 -> 457;
319 -> 459;
319 -> 461;
318 [shape=box, label="FuncDecl name='main'\nsymbolTable: (empty)"];
318 -> 319;
0 [shape=box, label="Program\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  fact : (int) -> int\n  fib : (int) -> int\n  is_prime : (int) -> bool\n  min : (int, int) -> int\n  gcd : (int, int) -> int\n  sum_nums : (int) -> int\n  sort_nums : (int) -> void\n  draw_triangle : (int) -> void\n  main : () -> int\n  nums : int [100]"];
0 -> 1;
0 -> 2;
0 -> 18;
0 -> 44;
0 -> 82;
0 -> 93;
0 -> 126;
0 -> 146;
0 -> 209;
0 -> 318;
}
