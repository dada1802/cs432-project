// CS 432 PROJECT 0: DECAF PROGRAMMING
// David Nguyen
// I did not use any AI-assist tools while creating this solution.

def int fact(int n)
{
    if (n == 1)
    {
        return 1;
    }

    return n * fact(n - 1);
}

def int fib(int n)
{
    if (n == 0)
    {
        return 0;
    }

    if (n == 1)
    {
        return 1;
    }

    return fib(n - 1) + fib(n - 2);
}

def bool is_prime(int n)
{
    int i;
    i = 2;

    if (n == 0 || n == 1)
    {
        return false;
    }

    while (i < n)
    {
        if (n % i == 0)
        {
            return false;
        }

        i = i + 1;
    }

    return true;
}

// Helper method for the gcd function.
def int min(int a, int b)
{
    if (a < b)
    {
        return a;
    }

    return b;
}

def int gcd(int a, int b)
{
    int m;
    m = min(a, b);

    while (m > 0)
    {
        if (a % m == 0 && b % m == 0)
        {
            return m;
        }

        m = m - 1;
    }
}

int nums[100];

def int sum_nums(int len)
{
    if (len == 0)
    {
        return 0;
    }

    len = len - 1;

    return nums[len] + sum_nums(len);
}

def void sort_nums(int len)
{
    bool check;
    check = true;

    if (len > 1)
    {
        while (check)
        {
            int i;
            i = 0;
            check = false;

            while (i < len - 1)
            {
                if (nums[i] > nums[i + 1])
                {
                    int temp;
                    temp = nums[i];
                    nums[i] = nums[i + 1];
                    nums[i + 1] = temp;
                    check = true;
                }

                i = i + 1;
            }
        }
    }
}

def void draw_triangle(int base)
{
    int i;
    int num_spaces;
    i = 1;
    num_spaces = base / 2;
    
    if (base % 2 == 0)
    {
        i = 2;
        num_spaces = num_spaces - 1;
    }

    if (base <= 2)
    {
        if (base == 1) {
            print_str("#");
        }

        else {
            print_str("##");
        }
    }

    else
    {
        while (i <= base)
        {
            int n;
            int spaces;
            n = 0;
            spaces = 0;

            while (spaces < num_spaces)
            {
                print_str(" ");
                spaces = spaces + 1;
            }

            while (n < i)
            {
                print_str("#");
                n = n + 1;
            }

            while (spaces > 0)
            {
                print_str(" ");
                spaces = spaces - 1;
            }

            if (i < base) {
                print_str("\n");
            }

            i = i + 2;
            num_spaces = num_spaces - 1;
        }
    }
}

def int main()
{
    int x;

    print_str("Test fact() function.\n");
    print_int(fact(1));
    print_str("\n");
    print_int(fact(10));
    print_str("\n");

    print_str("\nTest fib() function.\n");
    print_int(fib(0));
    print_str("\n");
    print_int(fib(25));
    print_str("\n");

    print_str("\nTest is_prime() function.\n");
    print_bool(is_prime(0));
    print_str("\n");
    print_bool(is_prime(3));
    print_str("\n");
    print_bool(is_prime(599));
    print_str("\n");
    print_bool(is_prime(600));
    print_str("\n");

    print_str("\nTest gcd() function.\n");
    print_int(gcd(18, 198));
    print_str("\n");

    print_str("\nTest sum_nums() function.\n");
    nums[0] = 1;
    nums[1] = 2;
    nums[2] = 3;
    print_int(sum_nums(0));
    print_str("\n");
    print_int(sum_nums(3));
    print_str("\n");

    print_str("\nTest sort_nums() function.\n");
    nums[0] = 15;
    nums[1] = 13;
    nums[2] = 9;
    nums[3] = 5;
    nums[4] = 2;
    sort_nums(5);
    x = 0;
    while (x < 5)
    {
        print_int(nums[x]);
        print_str("\n");
        x = x + 1;
    }
    print_str("\n");

    print_str("\nTest draw_triangle() function.\n");
    draw_triangle(1);
    print_str("\n");
    draw_triangle(2);
    print_str("\n");
    draw_triangle(5);
    print_str("\n");
    draw_triangle(8);
    print_str("\n");

    return 0;
}