==128095== Memcheck, a memory error detector
==128095== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==128095== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==128095== Command: ../decaf inputs/sanity.decaf
==128095== 
==128095== Invalid write of size 4
==128095==    at 0x109ADA: allocate_registers (p5-regalloc.c:152)
==128095==    by 0x117C41: main (main.c:159)
==128095==  Address 0x4b25fcc is 4 bytes before a block of size 16 alloc'd
==128095==    at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==128095==    by 0x109903: allocate_registers (p5-regalloc.c:127)
==128095==    by 0x117C41: main (main.c:159)
==128095== 
main:
  push BP
  i2i SP => BP
  addI SP, 0 => SP
  loadI 4 => R0
  i2i R0 => RET
  jump l0
l0:
  i2i BP => SP
  pop BP
  return
RETURN VALUE = 4
==128095== 
==128095== HEAP SUMMARY:
==128095==     in use at exit: 16 bytes in 1 blocks
==128095==   total heap usage: 1,806 allocs, 1,805 frees, 462,532 bytes allocated
==128095== 
==128095== 16 bytes in 1 blocks are definitely lost in loss record 1 of 1
==128095==    at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==128095==    by 0x109903: allocate_registers (p5-regalloc.c:127)
==128095==    by 0x117C41: main (main.c:159)
==128095== 
==128095== LEAK SUMMARY:
==128095==    definitely lost: 16 bytes in 1 blocks
==128095==    indirectly lost: 0 bytes in 0 blocks
==128095==      possibly lost: 0 bytes in 0 blocks
==128095==    still reachable: 0 bytes in 0 blocks
==128095==         suppressed: 0 bytes in 0 blocks
==128095== 
==128095== For lists of detected and suppressed errors, rerun with: -s
==128095== ERROR SUMMARY: 33 errors from 2 contexts (suppressed: 0 from 0)
